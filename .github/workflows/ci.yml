name: n64soul-ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  rust-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Tooling (Rust - nightly for N64)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Deps
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install -y lld

      - name: Generate debug weights (ephemeral)
        run: |
          python tools/make_debug_weights.py \
            --out-bin n64llm/n64-rust/assets/weights.bin \
            --out-man n64llm/n64-rust/assets/weights.manifest.bin
          python tools/validate_weights.py \
            --bin n64llm/n64-rust/assets/weights.bin \
            --man n64llm/n64-rust/assets/weights.manifest.bin --crc

      - name: Host unit tests (asset-free)
        run: cargo test --lib --verbose --target x86_64-unknown-linux-gnu
        working-directory: n64llm/n64-rust

      - name: Build ROM (ELF -> ROM via nust64 + libdragon IPL3)
        run: |
          cargo install --target x86_64-unknown-linux-gnu nust64
          # Build for mips-nintendo64-none; std = core,alloc comes from .cargo/config.toml
          cargo +nightly build --release --target mips-nintendo64-none
          ELF=target/mips-nintendo64-none/release/n64_gpt
          # Produce a ROM using libdragonâ€™s open IPL3 (no proprietary blob needed)
          nust64 --libdragon release --elf "$ELF" --out n64_gpt_debug.z64
          echo "### ROM output" >> $GITHUB_STEP_SUMMARY
          du -h n64_gpt_debug.z64 | awk '{print "* ROM size: " $1}' >> $GITHUB_STEP_SUMMARY
          sha256sum n64_gpt_debug.z64 | awk '{print "* sha256: " $1}' >> $GITHUB_STEP_SUMMARY
        working-directory: n64llm/n64-rust

      - name: Scrub ephemerals
        run: |
          rm -f n64llm/n64-rust/assets/weights.bin n64llm/n64-rust/assets/weights.manifest.bin
          find n64llm/n64-rust/target -type f \( -name "*.z64" -o -name "*.n64" \) -delete

      - name: No binaries leaked into tree
        run: |
          set -e
          test ! -e n64llm/n64-rust/assets/weights.bin
          test ! -e n64llm/n64-rust/assets/weights.manifest.bin
          ! git ls-files -o --exclude-standard | grep -E '\.(bin|z64|n64)$' || (echo "Found stray binaries"; exit 1)
