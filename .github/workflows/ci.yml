# yamllint disable rule:line-length
---
name: n64soul-ci

'on':
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: ['**']

jobs:
  rust-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Tooling (Rust - nightly for N64)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: Python
        uses: actions/setup-python@v5
        with: {python-version: '3.11'}

      - name: Deps
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install -y lld

      - name: Host unit tests (asset-free)
        run: |
          cargo test --lib --verbose --features host
          cargo test --test host_sanity --verbose --features host
        working-directory: n64llm/n64-rust

      - name: Export distilled weights (ephemeral)
        run: |
          python tools/export_gpt2_n64.py \
            --model distilgpt2 \
            --dtype fp16 \
            --keep-layers 6 \
            --out-dir n64llm/n64-rust/assets
          python tools/validate_weights.py \
            --bin n64llm/n64-rust/assets/weights.bin \
            --man n64llm/n64-rust/assets/weights.manifest.bin --crc

      - name: Install cargo-n64 (patched)
        run: bash tools/install_cargo_n64.sh

      # ---------- PRs: build with a dummy IPL3 (no licensed content) ----------
      - name: Build ROM (PR-safe dummy IPL3)
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: n64llm/n64-rust
        run: |
          python - <<'PY'
          # Generate a 4032-byte dummy IPL3 (bootcode region size 0x1000-0x40)
          with open('ipl3_dummy.bin','wb') as f:
              f.write(bytes([0])*4032)
          PY
          cargo +nightly -Z build-std=core,alloc n64 build --ipl3 ./ipl3_dummy.bin
          ls -l target/n64/debug || true

      - name: Upload PR ROM artifact (non-bootable)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: n64-rom-PR-DUMMY
          path: n64llm/n64-rust/target/n64/debug/*.n64
          if-no-files-found: warn

      # ---------- Pushes / tags: use real IPL3 from secret ----------
      - name: Decode IPL3 secret
        if: ${{ github.event_name != 'pull_request' && secrets.N64_IPL3_BASE64 }}
        env:
          N64_IPL3_BASE64: ${{ secrets.N64_IPL3_BASE64 }}
        working-directory: n64llm/n64-rust
        run: echo "$N64_IPL3_BASE64" | base64 -d > ipl3.bin

      - name: Build ROM (real IPL3)
        if: ${{ github.event_name != 'pull_request' && secrets.N64_IPL3_BASE64 }}
        working-directory: n64llm/n64-rust
        run: |
          cargo +nightly -Z build-std=core,alloc n64 build --ipl3 ./ipl3.bin
          ls -l target/n64/debug || true

      - name: Upload ROM artifact
        if: ${{ github.event_name != 'pull_request' && secrets.N64_IPL3_BASE64 }}
        uses: actions/upload-artifact@v4
        with:
          name: n64-rom
          path: n64llm/n64-rust/target/n64/debug/*.n64
          if-no-files-found: error

      # Optional: skip message when secret isn't configured on pushes
      - name: Skip ROM build (no IPL3 secret)
        if: ${{ github.event_name != 'pull_request' && !secrets.N64_IPL3_BASE64 }}
        run: echo "N64_IPL3_BASE64 not set; skipping ROM packaging on push."

      # ---------- OPTIONAL: allow *internal* PRs to use real IPL3 ----------
      # (Uncomment these two steps if you want PRs from branches in THIS repo to use the secret)
      # - name: Decode IPL3 for internal PRs
      #   if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && secrets.N64_IPL3_BASE64 }}
      #   env:
      #     N64_IPL3_BASE64: ${{ secrets.N64_IPL3_BASE64 }}
      #   working-directory: n64llm/n64-rust
      #   run: echo "$N64_IPL3_BASE64" | base64 -d > ipl3.bin
      #
      # - name: Build ROM (internal PRs, real IPL3)
      #   if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && secrets.N64_IPL3_BASE64 }}
      #   working-directory: n64llm/n64-rust
      #   run: cargo +nightly -Z build-std=core,alloc n64 build --ipl3 ./ipl3.bin

      - name: Scrub ephemerals
        run: |
          rm -f n64llm/n64-rust/assets/weights.bin n64llm/n64-rust/assets/weights.manifest.bin
          find n64llm/n64-rust/target -type f \( -name "*.z64" -o -name "*.n64" \) -delete

      - name: No binaries leaked into tree
        run: |
          set -e
          test ! -e n64llm/n64-rust/assets/weights.bin
          test ! -e n64llm/n64-rust/assets/weights.manifest.bin
          ! git ls-files -o --exclude-standard | grep -E '\.(bin|z64|n64)$' || (echo "Found stray binaries"; exit 1)
