name: n64soul-ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  rust-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Tooling (Rust - nightly for N64)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Deps
        run: |
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install -y lld

      - name: Host unit tests (asset-free)
        run: |
          cargo test --lib --verbose --features host
          cargo test --test host_sanity --verbose --features host
        working-directory: n64llm/n64-rust

      - name: Generate debug weights (ephemeral)
        run: |
          python tools/make_debug_weights.py \
            --out-bin n64llm/n64-rust/assets/weights.bin \
            --out-man n64llm/n64-rust/assets/weights.manifest.bin
          python tools/validate_weights.py \
            --bin n64llm/n64-rust/assets/weights.bin \
            --man n64llm/n64-rust/assets/weights.manifest.bin --crc

      - name: Install cargo-n64 (only on main pushes)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: bash tools/install_cargo_n64.sh

      - name: Prepare IPL3 (if provided)
        if: ${{ secrets.N64_IPL3_BASE64 }}
        run: |
          echo "$N64_IPL3_BASE64" | base64 -d > ipl3.bin
        env:
          N64_IPL3_BASE64: ${{ secrets.N64_IPL3_BASE64 }}
        working-directory: n64llm/n64-rust

      - name: Prepare donor ROM
        if: ${{ secrets.N64_DONOR_ROM_BASE64 }}
        run: |
          echo "$N64_DONOR_ROM_BASE64" | base64 -d > donor.z64
        env:
          N64_DONOR_ROM_BASE64: ${{ secrets.N64_DONOR_ROM_BASE64 }}
        working-directory: n64llm/n64-rust

      - name: Build N64 ROM
        if: ${{ secrets.N64_IPL3_BASE64 }}
        working-directory: n64llm/n64-rust
        run: cargo +nightly -Z build-std=core,alloc n64 build --ipl3 ./ipl3.bin

      - name: Build N64 ROM (extract IPL3)
        if: ${{ secrets.N64_DONOR_ROM_BASE64 }}
        working-directory: n64llm/n64-rust
        run: cargo +nightly -Z build-std=core,alloc n64 build --ipl3-from-rom ./donor.z64

      - name: Upload ROM artifact
        if: ${{ secrets.N64_IPL3_BASE64 || secrets.N64_DONOR_ROM_BASE64 }}
        uses: actions/upload-artifact@v4
        with:
          name: n64-rom-debug
          path: n64llm/n64-rust/target/n64/debug/*.n64

      - name: Skip ROM build (no IPL3)
        if: ${{ !secrets.N64_IPL3_BASE64 && !secrets.N64_DONOR_ROM_BASE64 }}
        run: echo "No IPL3 secret configured; skipping ROM build step."

      - name: Scrub ephemerals
        run: |
          rm -f n64llm/n64-rust/assets/weights.bin n64llm/n64-rust/assets/weights.manifest.bin
          find n64llm/n64-rust/target -type f \( -name "*.z64" -o -name "*.n64" \) -delete

      - name: No binaries leaked into tree
        run: |
          set -e
          test ! -e n64llm/n64-rust/assets/weights.bin
          test ! -e n64llm/n64-rust/assets/weights.manifest.bin
          ! git ls-files -o --exclude-standard | grep -E '\.(bin|z64|n64)$' || (echo "Found stray binaries"; exit 1)
